var documenterSearchIndex = {"docs":
[{"location":"#Module-SkyDomes","page":"API","title":"Module SkyDomes","text":"","category":"section"},{"location":"","page":"API","title":"API","text":"CurrentModule = SkyDomes","category":"page"},{"location":"","page":"API","title":"API","text":"UniformSky\nStandardSky\nCIE\nradiosity\nequal_solid_angles\nequal_angle_intervals\nsky\nclear_sky\nwaveband_conversion","category":"page"},{"location":"#SkyDomes.UniformSky","page":"API","title":"SkyDomes.UniformSky","text":"UniformSky()\n\nModel of uniform sky diffuse radiation. See package documentation for details.\n\n\n\n\n\n","category":"type"},{"location":"#SkyDomes.StandardSky","page":"API","title":"SkyDomes.StandardSky","text":"StandardSky()\n\nStandard model of overcast sky diffuse radiation Moon & Spencer (1942). See package documentation for details.\n\n\n\n\n\n","category":"type"},{"location":"#SkyDomes.CIE","page":"API","title":"SkyDomes.CIE","text":"CIE(;type = 1, θₛ = 0.0, Φₛ = 0.0, rtol = sqrt(eps(Float64)), atol = 0.0,\n\nmaxevals = typemax(Int))\n\nCreate a standard CIE model of sky diffuse radiance as described by Darula and Kittler (2002). The argument type can have values from 1 to 15 representing the 15 standard CIE models. θₛ and Φₛ are the zenith and azimuth angles of the solar disc. rtol and atol and maxevals are the relative tolerance, absolute tolerance and maximum number of function evaluation of the numerical integration algorithm. See package documentation for details.\n\n\n\n\n\n","category":"type"},{"location":"#SkyDomes.radiosity","page":"API","title":"SkyDomes.radiosity","text":"radiosity(m::UniformSky, sky::SkySectors, Idif::SVector{nw, Float64}) where nw\n\nCalculate the radiosity of each section of sky given diffuse irradiance on the horizontal plane (Idif with nw wavebands) assuming a Uniform Sky model. See package documentation for details.\n\n\n\n\n\nradiosity(m::StandardSky, sky::SkySectors, ::Type{Val{nw}} = Val{1})\n\nCalculate the radiosity of each section of sky normalized by diffuse radiance on the horizontal plane assuming a Standard Sky model and for nw wavebands. See package documentation for details.\n\n\n\n\n\n","category":"function"},{"location":"#SkyDomes.equal_solid_angles","page":"API","title":"SkyDomes.equal_solid_angles","text":"equal_solid_angles (ntheta, nphi)\n\nDiscretize the sky into ntheta zenith rings and a number of sectors per ring that is proportional to sin(θ). The total number of sectors will be ntheta*nphi. Returns an object of type SkySectors. See package documentation for details.\n\n\n\n\n\n","category":"function"},{"location":"#SkyDomes.equal_angle_intervals","page":"API","title":"SkyDomes.equal_angle_intervals","text":"equal_angle_intervals(ntheta, nphi)\n\nDiscretize the sky into ntheta zenith rings of nphi sectors each assuming the same angle intervals for each sector (Δθ = π/2/ntheta and ΔΦ = 2π/nphi). Returns an object of type SkySectors. See package documentation for details.\n\n\n\n\n\n","category":"function"},{"location":"#SkyDomes.sky","page":"API","title":"SkyDomes.sky","text":"sky(scene; Idir = 0.77, nrays_dir = 100_000, theta_dir = 0.0, phi_dir = 0.0,\n           Idif = 0.23, nrays_dif = 1_000_000, sky_model = StandardSky,\n           dome_method = equal_solid_angles, ntheta = 9, nphi = 12,\n           kwargs...)\n\nCreate a vector of directional radiation sources representing diffuse and direct solar radiation for a given scene.\n\nArguments\n\nscene: A Scene object generated by VPL.\nIdir: The direct solar radiation measured on the horizontal plane (a single value or tuple).\nnrays_dir: The number of rays to be generated for direct solar radiation.\ntheta_dir: The zenith angle of the sun position (radians).\nphi_dir: The azimuthal angle of the sun position (radians).\nIdif: The diffuse solar radiation measured on the horizontal plane (a single value or tuple).\nnrays_dif: The total number of rays to be generated diffuse solar radiation.\nsky_model: The angular distribution of diffuse irradiance (StandardSky, UniformSky or CIE).\ndome_method: The method to discretize hemisphere into patches for diffuse solar radiation (equal_solid_angles or equal_angle_intervals).\nntheta: The number of divisions along the zenith angle for dome_method.\nnphi: The number of divisions along the azimuthal angle for dome_method.\nkwargs...: Additional arguments to be used when dome_method = CIE\n\nReturns\n\nA vector of directional sources that can be used for ray tracing calculations in VPL. ```\n\n\n\n\n\n","category":"function"},{"location":"#SkyDomes.clear_sky","page":"API","title":"SkyDomes.clear_sky","text":"clear_sky(;lat, DOY, t, altitude = 0.0, TL = 4.0)\n\nCalculate global, direct and diffuse solar radiation on the horizontal plane using the clear sky model by Ineichen and Perez (2002).\n\nArguments\n\nlat: latitude in radians\nDOY: day of year\nf: fraction of the day (0 = sunrise, 1 = sunset)\naltitude: altitude above sea level in meters (default 0.0)\nTL: Linke turbidity coefficient (default 4.0)\n\nReturns\n\nA named tuple with fields:\n\nIg: global solar radiation on the horizontal plane in W/m^2\nIdir: direct solar radiation on the horizontal plane in W/m^2\nIdif: diffuse solar radiation on the horizontal plane in W/m^2\ntheta: solar zenith angle in radians\n\nReferences\n\nIneichen P., Perez R., A new airmass independent formulation for  the Linke turbidity coefficient, Solar Energy, Vol 73(3), pp.151–157, 2002.\n\n\n\n\n\n","category":"function"},{"location":"#SkyDomes.waveband_conversion","page":"API","title":"SkyDomes.waveband_conversion","text":"waveband_conversion(;Itype = :direct, waveband = :PAR, mode = :power)\n\nReturns the conversion coefficient from solar radiation (W/m2) to a give  waveband in either power (W/m2) or photon flux (umol/m2/s). The coefficients are based on the Bird spectral model for a clear sky using June 21th in The  Netherlands (latitude 52° N).\n\nArguments\n\nItype: The type of solar radiation, either :direct or :diffuse.\nwaveband: The waveband of interest, one of :PAR, :UV, :blue, :red, :green, or :NIR.\nmode: The physical units of the target, either :power (W/m^2) or :flux (mol/m^2/s).\n\nExamples\n\nwaveband_conversion(Itype = :diffuse, waveband = :UV, mode = :flux)\nwaveband_conversion(waveband = :NIR)\n\n\n\n\n\n","category":"function"}]
}
